env:
  global:
    secure: "kl2poFRLbAO2FDzMk2UBzh5JIQmWKLLj1vQRsoKnfDhdlbY5cnjdz/wFucXefP2aX3+QUQV0pgwD4ctoq0MdWqfpjPEzth3+aSNqMZQXTXlFCKuSpv6QjGyX9eNffzFYFUsrKGb2ke6AMS8rKLONg+/BA8BlhH7Jb4yLEAcKNZ/YsFmp3F9hkMU2Nrpq3FwbOdkce0e+aB2EJqO5sb8Xhv+2If5aXCKm0e3u7Ju3Ez6jKn6YWUp2qZDu/w2ZAo8fgS1oqPycDEdjxDjFF9+bWHX7fcH+KAOPcOraUyc1RdhD33XDCeY/lwNRuLYHTDUzYE9cPM+fTVH6lEPJY4aRXTs05wx/nLBfdCmz47KKin+jp3hmnC/cHVQrx6oiVaoUIQbIB53fn4r/OkavDv8PNIJoYGJg70VE732XQmLQhjKAu06xP6OCT/XmXhfHnucQFv/5Q6jgUAf1reqVH+0yn81cLfW/WnwIYiF6yFwqxxtruIlvEjyVBNd9LWkIHKZWsDyshjmbkuvOk1NgvaFYGBNc4FKdQdUQKKQPnkKfNHbuARQ36gE+U16X2iCShLgStbbgvDJ8ZnEE325L1r+gcHCxRIR10PTyXkfbJJfr3JU6zoKYt2j3PQn8MAWr+VkkmEXSQRi5M2Z5wQPdkEP6hV/Fy01OEnLu8IkEHOII/FA="
notifications:
  email: false
git:
  quiet: true
  depth: false
language: node
node_js: lts/*
python: 3.7
service: docker
os: linux
addons:
  apt:
    update: true
    packages:
      - curl
      - sudo
      - lsof
      - docker-ce
      - python3-pip
install: true
before_install:
  - export DISPLAY=:99.0
  - |
    if [ ! -f ${HOME}/.local/daggerok/bash-functions/master/main.bash ] ; then
      mkdir -p ${HOME}/.local/daggerok/bash-functions/master ;
      curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash > ${HOME}/.local/daggerok/bash-functions/master/main.bash ;
    fi
    source ${HOME}/.local/daggerok/bash-functions/master/main.bash ;
  - stop_any 80 3000 5000 8080 5432
  - export PATH=$HOME/.local/bin:$PATH
  - pip3 install --user --upgrade pip setuptools
  - pip install --user --upgrade httpie
jobs:
  include:
    - stage: test
      env:
        - SUB_PROJECT="todo-list"
      name: todo-list
      before_script:
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm i
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm run forever
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm run logs &
        - wait_for 3000
      script:
        - http :3000
      after_script: cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm stop
    - stage: test
      env:
        - SUB_PROJECT="vuetify-axios-vuex-nuxt"
      name: vuetify-axios-vuex-nuxt
      before_script:
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm i
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm run forever
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm run logs &
        - wait_for 3000
      script:
        - http :3000
      after_script: cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm stop
    - stage: test
      env:
        - SUB_PROJECT="vuetify-axios-vuex-nuxt-manual"
      name: vuetify-axios-vuex-nuxt-manual
      before_script:
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm i
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm run forever
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm run logs &
        - wait_for 3000
      script:
        - http :3000
      after_script: cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm stop
    - stage: test
      env:
        - SUB_PROJECT="json-server-fake-api"
      name: json-server-fake-api
      before_script:
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm i
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm run start-api
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm run generate
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm run start-nuxt
        - wait_for 8080 3000
      script:
        - http :8080/messages
        - http :8080/db
        - http :3000/
        - http :8080/users/1
      after_script: cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm run stop-all
    - stage: test
      env:
        - SUB_PROJECT="simple-vuex-store"
      name: simple-vuex-store
      before_script:
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm i
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm run generate
        - docker run -d --rm
                      --name app
                      -p 80:80
                      -v $TRAVIS_BUILD_DIR/$SUB_PROJECT/dist:/usr/share/nginx/html:ro
                      --health-cmd="wget -q --spider http://127.0.0.1:80/ || exit 1"
                      --health-start-period=1s
                      --health-interval=1s
                      nginx:1.17.6-alpine
        - wait_healthy_docker_containers 1
      script:
        - http :/
      after_script: docker rm -f -v app
    - stage: test
      env:
        - SUB_PROJECT="simple"
      name: simple
      before_script:
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm i
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm run generate
        - docker run -d --rm
                      --name app
                      -p 80:80
                      -v $TRAVIS_BUILD_DIR/$SUB_PROJECT/dist:/usr/share/nginx/html:ro
                      --health-cmd="wget -q --spider http://127.0.0.1:80/ || exit 1"
                      --health-start-period=1s
                      --health-interval=1s
                      nginx:1.17.6-alpine
        - wait_healthy_docker_containers 1
      script:
        - http :/
      after_script: docker rm -f -v app
    - stage: deploy
      env:
        - SUB_PROJECT="simple-vuex-store"
      name: GitHub pages deploy
      script: skip
      if: branch = "master" AND type NOT IN (pull_request)
      before_deploy:
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ] || [ ".$TRAVIS_BRANCH" != ".master" ] ; then exit 0 ; fi
        - env
        - set -e
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm i
        - cd $TRAVIS_BUILD_DIR/$SUB_PROJECT && npm run gh
      deploy:
        provider: pages
        skip-cleanup: true
        github-token: "$GITHUB_TOKEN"
        keep-history: true
        on:
          branch: master
        local-dir: $SUB_PROJECT/dist
        target_branch: gh-pages
cache:
  pip: true
  packages: true
  directories:
    - ~/.local/daggerok
    - ~/.docker
    - ~/.n*
